clc

close all
warning off
[filename, pathname] = uigetfile('*.*', 'Pick a MATLAB code file');
filename=strcat(pathname,filename);
a=imread (filename);
imshow(a);

I = (a);
figure;
imshow(I);

figure;
imhist(I)

impixelinfo;

I=imbinarize(I,20/255);
figure;
imshow(I);

d=imfill(I,"holes");
figure;
imshow(d);

e=bwareaopen (d,1000);
figure;
imshow(e);


PreprocessedImage=uint8(double(a).*repmat(e,[1 1 3]));
figure;
imshow(PreprocessedImage);

PreprocessedImage=imadjust(PreprocessedImage,[0.3 0.7],[])+50;
figure;
imshow(PreprocessedImage);
uo=rgb2gray(PreprocessedImage); % it is almost same as no differene bw grayscale and rgb)
figure;
imshow(uo);

mo=medfilt2 (uo,[5 5]);
figure;
imshow(mo);

imhist(mo);  
impixelinfo;
po=mo>250; %in resulted image we can understand where kidney stone is.
figure;
imshow(po);
 

[r, I, m]=size(po);
x1=r/2;
y1=I/3;
row=[x1 x1+200 x1+200 x1];
col=[y1 y1 y1+40 y1+40];
BW=roipoly(po,row,col);
figure;
imshow(BW);
 
%Apply mask with (po)
k=po.*double(BW);
figure;
imshow(k);

M=bwareaopen(k,4); %if binary object have been more than 4 pixel then only we will take
[ya, number]=bwlabel(M);
if (number>=1)
	disp('Stone is Detected');
else
	disp('No Stone is Detected');
end


segmentedImage = imread(filename);
segmentedImage=im2bw(segmentedImage);

% Read the ground truth image
[filename, pathname] = uigetfile('*.*', 'Pick a MATLAB code file');
filename = strcat(pathname, filename);
groundTruthImage = imread(filename);
groundTruthImage=im2bw(groundTruthImage);

% Resize the ground truth image to match the size of the segmented image
groundTruthImage=imresize(groundTruthImage, size(segmentedImage));

% Calculate the true positives, false positives, false negatives, and true negatives
TP=sum(sum(segmentedImage & groundTruthImage));
FP=sum(sum(segmentedImage & ~groundTruthImage));
FN=sum(sum(~segmentedImage & groundTruthImage));
TN=sum(sum(~segmentedImage & ~groundTruthImage));

% Calculate the evaluation metrics
accuracy = (TP+TN)/(TP+FP+FN+TN);
precision = TP/(TP+FP);
recall = TP/(TP+FN);
F = 2*(precision*recall)/(precision+recall);
MSE = immse(segmentedImage, groundTruthImage);
PSNR = psnr(segmentedImage, groundTruthImage);
elapsedTime = toc;

% Display the evaluation metrics
fprintf('Evaluation metrics for thresholding-based segmentation:\n');
fprintf('Accuracy: %f\n', accuracy);
fprintf('Precision: %f\n', precision);
fprintf('Recall: %f\n', recall);
fprintf('F-measure: %f\n', F);
fprintf('Mean Squared Error: %f\n', MSE);
fprintf('Peak Signal-to-Noise Ratio: %f\n', PSNR);
fprintf('Elapsed Time: %f seconds\n', elapsedTime);







